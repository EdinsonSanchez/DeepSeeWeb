@mixin animBack {
    transition-property: background;
    transition-duration: $hoverSpeed;
    will-change: background;
}
@mixin hoverColor {
    @if ($inverted == 1) {
        background: $hoverColorInv none;
    } @else {
        background: $hoverColor none;
    }
}

@function changeColor($color, $factor){
    $tmp: max(-100%, min(100%, $factor * $contrast));
    @if $inverted == 1 {
        $tmp: (-1 * $tmp);
    }
    @if $tmp > 0 {
        @return lighten($color, $tmp)
    } @else {
        @return darken($color, (-1 * $tmp))
    }
}

html {
    background-color: $backColor;
}

* {
    box-sizing: border-box;
}


.gridster {
    background-color: $backColor;
}

.navbar-default .navbar-brand:focus, .navbar-default .navbar-brand:hover {
    color: $iconColor;
}

.navbar {
    position: fixed;
    left: 0;
    top: 0;
    right: 0;
    z-index: $zIndexHeader;
    height: $headerHeight;
    box-shadow: none;


}

.navbar-nav {
    display: flex;
    flex-direction: column;
}

.navbar-default .navbar-nav > li > a {
    display: flex;
    align-items: center;
    & > i {
        margin-right : 4px;
    }
}
.navbar-default  {
    color: $fontColor;
    background: $themeColor none;
    border-radius: 0;
    border: none;
    min-height: initial;
    border-bottom: 1px solid changeColor($themeColor, -10%);
    &:hover, &:focus {
        color: $fontColor;
    }
    & .fa {
        font-size: $iconSize;
    }
    & .btn {
        @include animBack;
        display: block;
        //align-items: center;
        //justify-content: center;
        min-width: $headerHeight;
        height: $headerHeight;
        background: transparent none;
        color: $iconColor;
        border: none;
        border-radius: 0;
        box-shadow: none;
        text-shadow: none;
        //font-size: $iconSize;
        &:hover {
            @include hoverColor;
        }
    }
}


.navbar-default .navbar-brand {
    color: $iconColor;
    text-shadow: none;
}

form, .navbar-btn, .navbar-form, .navbar {
    margin: 0;
    padding: 0;
}
input, .form-control {
    border-radius: 0;
}

.nav > .dropdown {
    flex: 1 1 100%;
    &:hover {
        @include hoverColor;
        color: $fontColor;
    }

}

input {
    border: 1px solid $controBorder;
}

label, input {
    color: $labelColor;
}

.navbar-form .input-group {
    display: flex;
}

.input-group {
    flex-direction: row;
    align-items: center;
}

.navbar-collapse {
    padding: 0;
    & > form {
        display: flex;
        flex-direction: row;
    }
}

.main-content {
    margin-top: $headerHeight;
}


.info-dev {
    display: flex;
    align-items: center;
    background-color: transparent;
    color: red;
    text-shadow: none;
}

.dropdown {
    display: flex !important;
    align-items: center;
}

.navbar-default .navbar-nav>li>a {
    color: $iconColor;
    text-shadow: none;
}

.navbar-default .navbar-nav>li>a:focus, .navbar-default .navbar-nav>li>a:hover {
    color: $iconColor;
    text-shadow: none;
}

.navbar-default .navbar-nav>.active>a, .navbar-default .navbar-nav>.open>a {
    background: transparent none;
    box-shadow: none;
}

.navbar-default .navbar-nav>.open>a, .navbar-default .navbar-nav>.open>a:focus, .navbar-default .navbar-nav>.open>a:hover {
    background-color: transparent;
    color: $fontColor;
}
.btn-default.active, .btn-default.focus, .btn-default:active, .btn-default:focus, .btn-default:hover, .open>.dropdown-toggle.btn-default {
    color: $fontColor;
}


.dropdown.open {
    /*background: $hoverColor none;*/
}

.btn-group.open .dropdown-toggle {
    box-shadow: none;
}

.dropdown-menu {
    border-radius: 0;
    padding: 0;
    border: none;
    background-color: $themeColor;
    margin-top: 0;
    & > .active > a {
        @include hoverColor;
        &:hover {
            @include hoverColor;
            color: $fontColor;
        }
    }
    & > li > a {
        color: $fontColor;
        line-height: 2em;
        @include animBack;
        &:hover {
            @include hoverColor;
            color: $fontColor;
        }
    }
}

.dropdown-menu>.active>a, .dropdown-menu>.active>a:focus, .dropdown-menu>.active>a:hover {
    color: $fontColor;
}

.gridster-item.metro-tile {
    border-radius: 0;
    border: 1px solid $tileBorder;
    &:hover {
        transform: translate(0px,-1px);
        box-shadow: 0 1px 1px rgba(0,0,0,.3);
    }
}

.metro-tile h4 input {
    border: 1px solid $tileBorder;
}

.metro-tile-selected {
    box-shadow: none;
    outline: 2px solid $labelColor;
}

.widget-holder {
    border-radius: 0;
}

.ngdialog.ngdialog-theme-default .ngdialog-content {
    border-radius: 0;
}
.ngdialog.ngdialog-theme-default.wnd-settings .ngdialog-content {
    border-radius: 0;
}

.sidebar-bottom {
    background-color: $themeColor;
    box-shadow: none;
    -webkit-box-shadow: none;
    -moz-box-shadow: none;
    border-top: 1px solid changeColor($themeColor, 0.1);
    & label {
        color: $fontColor;
    }
}

.color-rect {
    box-shadow: none;
    border: 1px solid $tileBorder;
    &.active {
        border-color: $tileBorder;
    }
}

.panel-default {
    border-color: $widgetBorder;
}

.panel-default>.panel-heading {
    border-radius: 0;
    background: $widgetHeader none;
    color: $widgetHeaderFont;
}

.gridster .gridster-item:hover .handle-se {
    border-color: transparent transparent $iconColor;
}

.btn-sign-out {
  &.btn.btn-default {
    display: flex;
  }
  align-items: center;
  & > i {
      margin-left: 4px;
  }
}

.widget-title-drag {
    color: $widgetHeaderFont;
}

.widget-title-btn {
    color: $widgetHeaderFont;
}

.wnd-about > .ngdialog-content{
    background-color: $themeColor !important;
    color: $fontColor !important;
    & h2 {
        text-align: center;
        margin: 0;
        margin-bottom: 16px;
    }
    & a {
        color: $fontColor;
        text-decoration: underline;
    }
}